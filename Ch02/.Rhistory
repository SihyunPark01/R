arr[,,2]
mode(arr); class(arr)
#교재 p108 실습 - 산술연산자 사용
num1 <- 100
num2 <- 20
result <- num1 + num2
result
result <- num1 - num2
result
result <- num1 * num2
result
result <- num1 / num2
result
result <- num1 %% num2 #나머지계산
result
result <- num1 ^ 2 #제곱 계산
result
result <- num1 ^ num2 #100의 20승
result
#교재 p109 실습 - 관계연산자 사용
boolean <- num1 == num2
boolean
boolean <- num1 * num2
boolean
boolean <- num1 != num2
boolean
boolean <- num1 != num2
boolean
boolean <- num1 > num2
boolean
boolean <- num1 <= num2
boolean
boolean <- num1 < num2
boolean
boolean <- num1 <= num2
boolean
boolean <- num1 >= num2
boolean
#교재 p109 실습 - 논리연산자 사용
logical <- num1 >= 50 & num2 <= 10 # 두 관계식이 같은지 판단
logical
logical <- num1 >= 50 | num2 <= 10 # 두 관계식 중 하나라도 같은지 판단
logical
logical <- num1 >= 50
logical
logical <- !(num1 >= 50)
logical
x <- TRUE; y <- FALSE
xor(x,y)
#교재 p110 실습 - if() 사용하기
x <- 50; y <- 4; z <- x*y
if(x*y >= 40){
cat("x*y의 결과는 40이상입니다.\n")
cat("x*y=", z)
} else {
cat("x*y의 결과는 40미만입니다. x*y=", z, "\n")
}
#교재 p110 실습 - if() 사용으로 입력된 점수의 학점 구하기
score <- scan()
score <- scan()
score
result <- "노력"
if(score >= 80){
result <- "우수"
}
cat("당신의 학점은", result, score)
#교재 p111 실습 - if ~ else if 형식으로 학점 구하기
score <- scan()
if(score >= 90){
result = "A학점"
} else if(score >= 80){
result = "B학점"
} else if(score >= 70){
result = "C학점"
} else if(score >= 60){
result = "D학점"
} else {
result = "F학점"
}
cat("당신의 학점은", result)
print(result)
#교재 p112 실습 - ifelse() 사용하기
score <- scan()
ifelse(score >= 80, "우수", "노력")
ifelse(score <= 80, "우수", "노력")
#교재 p113 실습 - switch() 를 사용하여 사원명으로 급여정보 보기
empname <- scan(what = "")
empname
switch(empname,
hong = 250,
lee = 350,
kim = 200,
kang = 400
)
#교재 p114 실습 - 벡터객체에서 특정 데이터를 검색하는데 사용되는 which() 함수:index 값을 반환
name <- c("kim","lee","choi","park")
which(name == "choi")
#교재 p114 실습 - 데이터프레임에서 which() 사용
no <- c(1:5)
name <- c("홍길동","이순신","강감찬","유관순","김유신")
score <- c(85, 78, 89, 90, 74)
exam <- data.frame(학번 = no, 이름 = name, 성적 = score)
exam
which(exam$이름 == "유관순")
exam[4,]
#교재 p115 실습 - for() 사용 기본
i <- c(1:10)
for(n in i){
print(n*10)
print(n)
}
#교재 p116 실습 - 짝수 값만 출력하기
i <- c(1:10)
for(n in i)
if(n %% 2 == 0) print(n)
#교재 p116 실습 - 짝수이면 넘기고, 홀수 값만 출력하기
i <- c(1:10)
for(n in i){
if(n %% 2 == 0){
next
}else{
print(n)
}
}
#교재 p116 실습 - 변수의 칼럼명 출력하기
name <- c(names(exam))
for(n in name){
print(n)
}
#교재 p117 실습 - 벡터 데이터 사용하기
score <- c(85, 95, 98)
name <- c("홍길동","이순신","강감찬")
i <- 1
for(s in score){
cat(name[i], "->", s, "\n")
i <- i+1
}
#교재 p117 실습 - while() 사용하기
i = 0
while(i<10){
i<-i+1
print(i)
}
#교재 p118 실습 - 매개변수가 없는 사용자 함수 정의하기
f1 <- function(){
cat("매개변수가 없는 함수")
}
f1()
#교재 p118 실습 - 결과를 반환하는 사용자 함수 정의하기
f3 <- function(x, y){
add<-x+y
return(add)
}
add <- f3(10,20)
add
#교재 p121 실습 - 피타고라스식 정의 함수 만들기
pytha <- function(s, t){
a <- s ^ 2 - t ^ 2
b <- 2 * s * t
c <- s^2+t^2
cat("피타고라스 정리:3개의 변수:",a,b,c)
}
pytha(2,1)
#교재 p121 실습 - 구구단 출력함수 만들기
gugu <- function(i, j){
for(x in i){
cat("**", x, "단 **\n")
for(y in j){
cat(x, "*", y, "=", x*y, "\n")
}
cat("\n")
}
}
i <- c(2:9)
j <- c(1:9)
gugu(i, j)
#교재 p122 실습 - 결측치를 포함하는 자료를 대상으로 평균구하기
data <- c(10, 20, 5, 4, 40, 7, NA, 6, 3, NA, 2, NA)
na <- function(x){
print(x)
print(mean(x, na.rm = T))
data = ifelse(!is.na(x), x, 0)
print(data)
print(mean(data))
data2 = ifelse(!is.na(x), x, round(mean(x, na.rm = TRUE), 2))
print(data2)
print(mean(data2))
na(data)
}
na(data)
#교재 p126 실습 - 기술통계량 관련 내장함수 사용하기
seq(-2, 2, by = .2)
vec <- 1:10
min(vec)
max(vec)
range(vec)
mean(vec)
median(vec)
sum(vec)
sd(rnorm(10)) # 정규분포 자료 10개를 대상으로 표준편차 구하기
table(vec) # 벡터 자료 대상으로 빈도수 구하기
score <- c(80, 72, 60, 78, 82)
names(score) <- c('김유신','김춘추','장보고','강감찬','이순신')
barplot(score)
# 기본 막대차트
count <- c(1, 2, 3, 4, 5) #vector자료구조를 count에 담자
barplot(count)
score <- c(80, 72, 60, 78, 82)
names(score) <- c('김유신','김춘추','장보고','강감찬','이순신')
barplot(score)
# 범주형 막대차트
season <- c('winter','summer','spring','summer','summer',
'autumn','autumn','summer','spring','spring')
season
result<-table(season) #각 컬럼 개수 도출
result
barplot(result, main = 'season')
barplot(result, main = 'season', col = c('blue','red','green','yellow')
barplot(result, main = 'season') #main은 타이틀
barplot(result, main = 'season', col = c('blue','red','green','yellow')
barplot(result, main = 'season', col = c('blue','red','green','yellow'))
barplot(result, main = 'season', col = rainbow())
barplot(result, main = 'season', col = c('blue','red','green','yellow'))
barplot(result, main = 'season', col = rainbow())
barplot(result, main = 'season', col = rainbow(4))
barplot(result, main = 'season', col = heat.colors(4))
barplot(result, main = 'season', col = terrain.colors(4))
barplot(result, main = 'season', col = rainbow(4))
barplot(result, main = 'season', col = heat.colors(4))
barplot(result, main = 'season', col = terrain.colors(4))
barplot(result, main = 'season', col = c('blue','red','green','yellow'))
barplot(result, main = 'season', col = rainbow(4))
barplot(result, main = 'season', col = heat.colors(4))
barplot(result, main = 'season', col = terrain.colors(4))
barplot(result, main = 'season') #main은 타이틀
barplot(result, main = 'season', col = c('blue','red','green','yellow'))
barplot(result, main = 'season', col = rainbow(4))
barplot(result, main = 'season', col = heat.colors(4))
barplot(result, main = 'season', col = terrain.colors(4))
barplot(result,
main = 'season',
col = rainbow(4),
xlab = '계절',
ylab = '빈도수')
barplot(result,
main = 'season',
col = rainbow(4),
xlab = '계절',
ylab = '빈도수',
horiz = T)
# 누적 막대차트
df_sample <- read.csv('../file/sample_population.csv')
df_sample
matrix_sample <- as.matrix(df_sample)
matrix_sample
barplot(matrix_sample)
barplot(matrix_sample, col = rainbow(3))
barplot(matrix_sample, col = rainbow(3), beside = T)
barplot(matrix_sample,
col = rainbow(3),
beside = T,
legend.text = T)
score <- c(80, 72, 60, 78, 82)
names(score) <- c('김유신','김춘추','장보고','강감찬','이순신')
dotchart(score)
dotchart(score, color = 'red', lcolor = 'blue')
season <- c('winter','summer','spring','summer','summer',
'autumn','autumn','summer','spring','spring')
season
result <- table(season)
result
pie()
pie(result)
pie(result, main = 'Season')
pie(result, main = 'Season', col=terrain.colors(4))
cars
View(cars)
dist <- cars[,2] #2번째컬럼
dist
class(dist)
mode(dist)
class(dist)
boxplot(dist, main = '자동차 제동거리리')
boxplot(dist, main = '자동차 제동거리')
boxplot.stats(dist)
iris
boxplot(data=iris,
Sepal.Length ~ Species)
cars
dist <- cars[,2]
dist
barplot(dist)
hist(dist)
hist(iris$Sepal.Width,
xlim = c(2.0, 4.5),
xlab = '꽃받침침 너비',
main = '꽃받침 너비 분포도')
hist(iris$Sepal.Width,
xlim = c(2.0, 4.5),
xlab = '꽃받침침 너비',
main = '꽃받침 너비 분포도')
hist(iris$Sepal.Width,
xlim = c(2.0, 4.5),
xlab = '꽃받침 너비',
main = '꽃받침 너비 분포도')
mtcars
plot(wt, mpg)
mtcars
View(mtcars)
wt <- mtcars$wt
mpg <- mtcars$mpg
plot(wt, mpg)
plot(wt, mpg, col = 'red', pch = 10) #무게에 따른 연비를 산점도로 나타내기
plot(wt, mpg, col = 'red', pch = 2) #무게에 따른 연비를 산점도로 나타내기
plot(wt, mpg, col = 'red', pch = 3)
plot(wt, mpg, col = 'red', pch = 1)
plot(wt, mpg, col = 'red', pch = 5)
plot(wt, mpg, col = 'red', pch = 7)
plot(wt, mpg, col = 'red', pch = 8)
iris
iris
df_iris <- iris[,3:4]
df_iris
plot(df_iris)
group <- as.numeric(iris$Species)
group
plot(df_iris)
plot(df_iris)
plot(df_iris, pch=16, col=color[group])
group <- as.numeric(iris$Species)
group
color <- c('red', 'green', 'blue')
plot(df_iris, pch=16, col=color[group])
#교재 p126 실습 - 정규분포(연속형)의 난수 생성하기
n <- 1000
rnorm(n, mean = 0, sd = 1)
hist(rnorm(n, mean=0, sd=1))
#교재 p127 실습 - 균등분포(연속형)의 난수 생성하기
n <-1000
runif(n, min=0, max=10)
hist(runif(m, min=0, max=10))
hist(runif(n, min=0, max=10))
#교재 p128 실습 - 이항분포(이산형)의 난수 생성하기
n <- 20
rbinom(n, 1, prob=1 / 2)
rbinom(n, 2, 0.5)
rbinom(n, 10, 0.5)
rbinom(n, 5, prob = 1/6)
#교재 p128 실습 - 종자값으로 동일한 난수 생성하기
rnorm(5, mean = 0, sd = 1)
set.seed(123)
rnorm(5, mean = 0, sd = 1)
#교재 p128 실습 - 종자값으로 동일한 난수 생성하기
rnorm(5, mean = 0, sd = 1)
set.seed(123)
rnorm(5, mean = 0, sd = 1)
set.seed(123)
rnorm(5, mean = 0, sd = 1)
set.seed(345)
rnorm(5, mean = 0, sd = 1)
#교재 p130 실습 - 수학 관련 내장함수 사용하기
vec <- 1:10
prod(vec)
factorial(5)
abs(-5)
sqrt(16)
vec
cumsum(vec)
log(10)
log(10)
log10(10)
#교재 p131 실습 - 행렬연산 내장함수 사용하기
x <- matrix(1:9, nrow = 3, ncol = 3, byrow = T)
y <- matrix(1:3, nrow = 3)
ncol(x)
nrow(x)
t(x)
cbind(x, 1:3)
rbind(x, 10:12)
diag(x)
det(x)
apply(x, 1, sum)
svd(x)
eigen(x)
x %*% y
#교재 p132 실습 - 집합연산 관련 내장함수 사용하기
x <- c(1, 3, 5, 7, 9)
y <- c(3, 7)
union(x, y)
setequal(x, y)
intersect(x, y) #교집합
setdiff(x, y) #차집합합
5 %in% y
#교재 p140 실습 - 세로 막대 차트 그리기
chart_data <- c(305, 450, 320, 460, 330, 480, 380, 520)
names(chart_data) <- c("2018 1분기","2019 1분기",
"2018 2분기","2019 2분기",
"2018 3분기","2019 3분기",
"2018 4분기","2019 4분기")
str(chart_data)
chart_data      #벡터 자료보기기
barplot(chart_data, ylim = c(0, 600),
col = rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
#교재 p141 실습 - barplot() 함수 도움말 보기
help("barplot")
#교재 p141 실습 - 막대차트의 가로축과 세로축에 레이블 추가하기
barplot(chart_data, ylim = c(0, 600),
ylab = "매출액(단위:만원)",  #y축이름 추가
xlab = "년도별 분기 현황",   #x축이름 추가가
col = rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
#교재 p142 실습 - 가로 막대차트 그리기
barplot(chart_data, xlim=c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col = rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
#교재 p142 실습 - 막대차트에서 막대 사이의 간격 조정하기
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col = rainbow(8), space = 1, cex.names = 0.8,
main = "2018년도 vs 2019년도 매출현황 비교")
#교재 p142 실습 - 막대차트에서 막대 사이의 간격 조정하기
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col = rainbow(8), space = 1, cex.names = 5,
main = "2018년도 vs 2019년도 매출현황 비교")
#교재 p142 실습 - 막대차트에서 막대 사이의 간격 조정하기
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col = rainbow(8), space = 1, cex.names = 0.8,
main = "2018년도 vs 2019년도 매출현황 비교")
#교재 p143 실습 - 막대차트에서 막대의 색상 지정하기
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col = rainbow(8), space = 1, cex.names = 0.8,
main = "2018년도 vs 2019년도 매출현황 비교",
col = rep(c(2,4),4))
#교재 p143 실습 - 막대차트에서 막대의 색상 지정하기
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
space = 1, cex.names = 0.8,
main = "2018년도 vs 2019년도 매출현황 비교",
col = rep(c(2,4),4))
#교재 p143 실습 - 막대 차트에서 색상이름을 사용하여 막대의 색상 지정하기
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
space = 1, cex.names = 0.8,
main = "2018년도 vs 2019년도 매출현황 비교",
col = rep(c("red", "green"),4))
#교재 p144 실습 - 누적 막대 차트 그리기
data("VADeaths")
VADeaths
str(VADeaths)
class(VADeaths)
mode(VADeaths)
par(mforw = c(1,2))
par(mfrow = c(1,2))
barplot(VADeaths, beside = T, col = rainbow(5),
main = "미국 버지니아주 하위계층 사망비율율")
barplot(VADeaths, beside = T, col = rainbow(5),
main = "미국 버지니아주 하위계층 사망비율")
legend(19, 71, c("50-54", "55-59", "60-64", "65-69", "70-74"),
cex = 0.8, fill = rainbow(5))
barplot(VADeaths, beside = F, col = rainbow(5))
title(main = "미국 버지니아주 하위계층 사망비율", font.main = 4)
title(main = "미국 버지니아주 하위계층 사망비율", font.main = 3)
title(main = "미국 버지니아주 하위계층 사망비율", font.main = 10)
title(main = "미국 버지니아주 하위계층 사망비율", font.main = 4)
legend(3.8, 200, c("50-54", "55-59", "60-64", "65-69", "70-74"),
cex = 0.8, fill=rainbow(5))
par(mfrow = c(1,1)) #1행 1열 그래프 보기
dotchart(chart_data, color = c("blue","red"),
lcolor = "black", pch = 1:2,
labels = names(chart_data),
xlab = "매출액",
main="분기별 판매현황 : 점차트 시각화",
cex =  1.2)
#교재 p148 실습 - 분기별 매출현황을 파이 차트로 시각화하기
par(mfrow = c(1,1))
#교재 p148 실습 - 분기별 매출현황을 파이 차트로 시각화하기
par(mfrow = c(1,1))
pie(chart_data, labels = names(chart_data), col = rainbow(8), cex = 1.2)
title("2018~2019년도 분기별 매출현황")
#교재 p148 실습 - VADeaths 데이터셋을 상자그래프로 시각화하기
boxplot(VADeaths, range=0) #최소값과 최대값을 점선으로 연결
boxplot(VADeaths, range=0, notch = T) #중위수 비교시 사용 (허리선)
abline(h = 37, lty = 3, col = "red")
#교재 p149 실습 - VADeaths 데이터셋의 요약통계 보기
summary(VADeaths)
#교재 p150 실습 - iris 데이터셋 가져오기
data(iris)
names(iris)
str(iris)
head(iris)
#교재 p150 실습 - iris 데이터셋의 꽃받침 길이(Sepal.Length)로 히스토그램 시각화하기
summary(iris$Sepal.Length)
his(iris$Sepal.Length, xlab="iris$Sepal.Length", col = "magenta",
main = "iris 꽃받침 길이 Histogram", xlim = c(4.3, 7.9))
hist(iris$Sepal.Length, xlab="iris$Sepal.Length", col = "magenta",
main = "iris 꽃받침 길이 Histogram", xlim = c(4.3, 7.9))
#교재 p151 실습 - iris 데이터셋의 꽃받침 너비(Sepal.Width)로 히스토그램 시각화하기
summary(iris$Sepal.Width)
hist(iris$Sepal.Width, xlab="iris$Sepal.Width", col = "mistyrose",
main = "iris 꽃받침 너비 Histogram", xlim = c(2.0, 4.5))
